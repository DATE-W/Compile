# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\13293\Desktop\1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QLabel, QMenuBar, QMenu, QStatusBar, QTextEdit, \
    QHBoxLayout, QGraphicsView, QGraphicsScene, QGraphicsPixmapItem, QGraphicsRectItem, QStyle, QDockWidget
from PyQt5.QtGui import QFont, QColor, QIcon, QPixmap
from qframelesswindow import FramelessMainWindow, FramelessDialog, StandardTitleBar
from PyQt5.QtCore import Qt, QSize
from code_editor import CodeEditor
from new_file_window import NewFileWindow


class CustomTitleBar(StandardTitleBar):

    def __init__(self, parent):
        super().__init__(parent)

        self.minBtn.setHoverColor(Qt.white)
        self.minBtn.setHoverBackgroundColor(QColor(50, 50, 50))
        self.maxBtn.setHoverColor(Qt.white)
        self.maxBtn.setHoverBackgroundColor(QColor(50, 50, 50))
        self.closeBtn.setHoverColor(Qt.white)
        self.closeBtn.setHoverBackgroundColor(QColor(50, 50, 50))


class MyGraphicsScene(QGraphicsScene):
    def __init__(self, parent=None):
        super().__init__(parent)

        # 设置场景的背景颜色
        self.setBackgroundBrush(QColor(60, 60, 60))



class ImageView(QGraphicsView):
    def __init__(self, path):
        super().__init__()

        scene = MyGraphicsScene(self)

        pixmap = QPixmap(path)
        pixmap = pixmap.scaled(QSize(25, 25))
        pixmap_item = QGraphicsPixmapItem(pixmap)
        # 计算使 pixmap_item 居中的坐标值
        center_x = (scene.width() - pixmap.width()) / 2
        center_y = (scene.height() - pixmap.height()) / 2

        # 设置 pixmap_item 在场景中的位置
        pixmap_item.setPos(center_x, center_y)
        # scene.addWidget(pixmap_item, Qt.AlignCenter)
        scene.addItem(pixmap_item)


        self.setStyleSheet(f"""
                QGraphicsScene{{background-color:QColor(60, 60, 60);}}
                QGraphicsView{{border:solid rgba(0, 0, 0, 0);}}
            """)
        # scene.setSceneRect(pixmap_item.pixmap().rect())

        # 设置 QGraphicsView 的场景
        self.setScene(scene)


class Ui_MainWindow(FramelessMainWindow):

    def __init__(self):
        self.bg_color = QColor(40, 40, 40)
        self.border_color = QColor(60, 60, 60)
        self.hangover_color = QColor(50, 50, 50)
        self.menu_hangover_color = QColor(4, 57, 94)
        self.default_color = QColor(212, 212, 212)
        super().__init__()
        self.setWindowTitle("新建文件")

        # add menu bar
        self.setTitleBar(CustomTitleBar(self))
        # self.setWindowIcon(QIcon('pic/vscode.png'))
        self.menuBar = QMenuBar(self.titleBar)
        self.pictureBox = ImageView('pic/vscode.png')
        self.pictureBox.setFixedWidth(35)
        menu = QMenu('文件', self)
        menu.addAction('新建')
        menu.addAction('打开')
        self.menuBar.addMenu(menu)
        self.menuBar.addAction('运行')
        self.menuBar.addAction('帮助', self.showHelpDialog)
        self.titleBar.layout().insertWidget(1, self.menuBar, 0, Qt.AlignLeft)
        self.titleBar.layout().insertWidget(0, self.pictureBox, 0, Qt.AlignCenter)
        self.titleBar.layout().setSpacing(0)
        self.titleBar.layout().insertStretch(1, 0)
        self.setMenuWidget(self.titleBar)

        # # add status bar
        # statusBar = QStatusBar(self)
        # statusBar.addWidget(QLabel('row 1'))
        # statusBar.addWidget(QLabel('column 1'))
        # self.setStatusBar(statusBar)

        # set central widget
        self.codeEditor = CodeEditor(self)
        self.setCentralWidget(self.codeEditor)
        # self.setCentralWidget(self.codeEditor)
        # self.setStyleSheet("""
        #             QMenuBar{background: #F0F0F0; padding: 5px 0}
        #             QTextEdit{border: none; font-size: 15px}
        #             QDialog > QLabel{font-size: 15px}
        #         """)

        # set QDockWidget


        self.setStyleSheet(f"""
                FramelessMainWindow{{background-color:{self.border_color.name()};}}
                QMenuBar{{background-color:{self.border_color.name()};padding: 3px 0px 0px 0px; color:{self.default_color.name()};border:none;}}
                QMenuBar::item:selected{{background-color:{self.hangover_color.name()}}}
                QMenu{{background-color:{self.border_color.name()};color:{self.default_color.name()}}}
                QMenu:selected{{background-color:{self.menu_hangover_color.name()}}}
                QTextEdit{{background-color:{self.bg_color.name()};border: none; font-size: 15px}}
                QStatusBar{{background-color:{self.bg_color.name()};bordr: none}}
                QMainWindow::close-button{{background-color:{self.default_color.name()};}}
                """)
        self.codeEditor.setGeometry(100, 100, 300, 200)
        self.setGeometry(100, 100, 600, 600)


    def showHelpDialog(self):
        w = FramelessDialog(self)

        # add a label to dialog
        w.setLayout(QHBoxLayout())
        w.layout().addWidget(QLabel('Frameless Dialog'), 0, Qt.AlignCenter)

        # raise title bar
        w.titleBar.raise_()
        w.resize(300, 300)

        # disable resizing dialog
        w.setResizeEnabled(False)
        w.exec()



